services:
  nginx:
    image: "nginx:latest"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "curl --fail http://localhost:80/health || exit 1" ]
      interval: 1m
      timeout: 5s
      retries: 10
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - watchdog_node
    ports:
      - "80:8000"

  app:
    restart: unless-stopped
    build:
      context: .
      dockerfile: docker/django/Dockerfile
    environment:
      DJANGO_ENV: dev
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - nginx
    volumes:
      - django-static:/var/www/django/static
      - .:/app
    networks:
      - watchdog_node
    env_file: config/.env
    command:
      - python -Wd manage.py runserver 0.0.0.0:8000
    healthcheck:
      test: [ "CMD", "curl --fail http://localhost:8000/admin || exit 1" ]
      interval: 1m
      timeout: 5s
      retries: 10

  db:
    image: "postgres:latest"
    restart: unless-stopped
    env_file: config/.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 1m
      timeout: 5s
      retries: 10
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - watchdog_node

  redis:
    image: "redis:latest"
    restart: unless-stopped
    env_file: config/.env
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 1m
      timeout: 5s
      retries: 10
    ports:
      - "6379:6379"


networks:
  watchdog_node:

volumes:
  postgres-data:
  django-static:
