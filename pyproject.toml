[tool.poetry]
name = "django-template"
version = "0.1.0"
description = ""
authors = ["NickiHell <nickihell@ya.ru>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"

django = { version = "^4.2", extras = ["argon2"] }
django-ninja = "^0.22.2"
django-stubs-ext = "^4.2.2"
django-csp = "^3.7"
django-split-settings = "^1.2"
django-http-referrer-policy = "^1.1"
django-permissions-policy = "^4.14"
django-redis = "^5.3.0"

gunicorn = "^20.1.0"
uvicorn = "^0.22.0"
python-decouple = "^3.7"
structlog = "^23.1.0"
rq = "^1.15.1"
psycopg2 = "^2.9.6"

aiohttp = "^3.8.3"
aiojobs = "^1.1.0"
aiofiles = "^23.1.0"

[tool.poetry.group.dev.dependencies]
black = "^23.3.0"
ruff = "^0.0.277"
django-debug-toolbar = "^4.1"
django-querycount = "^0.8"
django-migration-linter = "^5.0"
django-extra-checks = "^0.13"
django-coverage-plugin = "^3.0"
django-stubs = "^4.2"
django-stubs-ext = "^4.2"
nplusone = "^1.0"
pytest = "^7.1"
pytest-django = "^4.5"
pytest-cov = "^4.1"
pytest-randomly = "^3.13"
pytest-deadfixtures = "^2.2"
pytest-timeout = "^2.1"
django-test-migrations = "^1.2"
hypothesis = "^6.80"
mypy = "^1.3"
yamllint = "^1.27"
safety = "^2.1"
dotenv-linter = "^0.4"
dump-env = "^1.3"
ipython = "^8.10"

[tool.ruff]
line-length = 120
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "B", # flake-bugbear
  "Q", # flake8-quotes
  "PT", # flake8-pytest-style
  "RET", # flake8-return
  "SIM", # flake8-simplify
  "FBT", # flake8-boolean-trap
  "C4", # flake8-comprehensions
  "PIE", # flake8-pie
  "TRY", # tryceratops
  "RUF", # ruff
  "PL", # pylint
  "DTZ", # flake8-datetimez
  "UP", # pyupgrade
  "C90", # mccabe
  "COM", # flake8-commas
  "INP", # flake8-no-pep420
  "TID", # flake8-tidy-imports
  "PTH", # flake8-use-pathlib
  "ERA", # eradicate
]

ignore = [
  "Q000",
  "E501", # Never enforce line length
  "RET504", # Unnecessary variable assignment before `return` statement
  "RUF001", # ruff unicode specific rules
  "RUF002", # ruff unicode specific rules
  "RUF003", # ruff unicode specific rules
  "TRY003", # Avoid specifying long messages outside the exception class
]

[tool.ruff.per-file-ignores]
"*/settings/*" = [
  "ERA001", # Found commented-out code
  "PLW1508", # Invalid type for environment variable default
  "FBT003", # Boolean positional value in function call
]
"tests/*" = [
  "ARG001", # Unused function argument
  "ARG002", # Unused method argument
  "ERA001", # Found commented-out code
  "PLR0913", # Too many arguments to function call
  "PLR2004", # Magic value used in comparison
  "INP001", # File is part of an implicit namespace package
]
"*/migrations/*" = [
  "INP001", # Add an `__init__.py`
  "ERA001", # Found commented-out code
  "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
]

unfixable = [
  "B", # Avoid trying to fix flake8-bugbear violations.
  "ERA", # Avoid deleting commented-out code
]

extend-exclude = []

[tool.ruff.mccabe]
max-complexity = 10

[tool.isort]
profile = "black"
line_length = 120
lines_after_imports = 2
ensure_newline_before_comments = true
known_third_party = ["image_service_client"]

[tool.black]
line-length = 120
target-version = ["py311"]
skip-string-normalization = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
