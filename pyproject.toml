[project]
name = "django-template"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
  "aiofiles>=24.1.0",
  "aiohttp>=3.12.15",
  "aiojobs>=1.4.0",
  "celery>=5.5.3",
  "django>=5.2.6",
  "django-ninja>=1.4.3",
  "django-split-settings>=1.3.2",
  "django-stubs-ext>=5.2.2",
  "psycopg>=3.2.10",
  "rq>=2.6.0",
  "uvicorn>=0.35.0",
]

[dependency-groups]
dev = [
  "django-debug-toolbar>=6.0.0",
  "django-querycount>=0.8.3",
  "django-stubs>=5.2.2",
  "ipython>=9.5.0",
  "mypy>=1.17.1",
  "nplusone>=1.0.0",
  "pytest>=8.4.2",
  "pytest-django>=4.11.1",
  "pytest-randomly>=4.0.0",
  "ruff>=0.13.0",
]

[tool.ruff]
line-length = 120
lint.select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "B", # flake-bugbear
  "Q", # flake8-quotes
  "PT", # flake8-pytest-style
  "RET", # flake8-return
  "SIM", # flake8-simplify
  "FBT", # flake8-boolean-trap
  "C4", # flake8-comprehensions
  "PIE", # flake8-pie
  "TRY", # tryceratops
  "RUF", # ruff
  "PL", # pylint
  "DTZ", # flake8-datetimez
  "UP", # pyupgrade
  "C90", # mccabe
  "COM", # flake8-commas
  "INP", # flake8-no-pep420
  "TID", # flake8-tidy-imports
  "PTH", # flake8-use-pathlib
  "ERA", # eradicate
]

lint.ignore = [
  "Q000",
  "E501", # Never enforce line length
  "RET504", # Unnecessary variable assignment before `return` statement
  "RUF001", # ruff unicode specific rules
  "RUF002", # ruff unicode specific rules
  "RUF003", # ruff unicode specific rules
  "TRY003", # Avoid specifying long messages outside the exception class
]

[tool.ruff.lint.per-file-ignores]
"*/settings/*" = [
  "ERA001", # Found commented-out code
  "PLW1508", # Invalid type for environment variable default
  "FBT003", # Boolean positional value in function call
]
"tests/*" = [
  "ARG001", # Unused function argument
  "ARG002", # Unused method argument
  "ERA001", # Found commented-out code
  "PLR0913", # Too many arguments to function call
  "PLR2004", # Magic value used in comparison
  "INP001", # File is part of an implicit namespace package
]
"*/migrations/*" = [
  "INP001", # Add an `__init__.py`
  "ERA001", # Found commented-out code
  "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
]

unfixable = [
  "B", # Avoid trying to fix flake8-bugbear violations.
  "ERA", # Avoid deleting commented-out code
]

[tool.ruff.lint.mccabe]
max-complexity = 10
